[build-system]
requires = [ "setuptools", "setuptools-scm" ]
build-backend = "setuptools.build_meta"

[project]
name = "based"
authors = [{name = "ansipunk"}]
description = "A based asynchronous database connection manager."
readme = "README.md"
license = {file = "LICENSE.txt"}
keywords = ["database", "sqlalchemy", "sqlite", "asyncio"]
requires-python = ">=3.8"
dynamic = ["version"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Database",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = ["SQLAlchemy>=2,<2.1"]

[project.optional-dependencies]
sqlite = ["aiosqlite>=0.20,<1"]
postgres = [
  "psycopg>=3,<4",
  "psycopg_pool>=3,<4",
]
dev = [
  "SQLAlchemy-Utils>=0.41,<1",
  "mypy>=1.12,<2",
  "psycopg2-binary>=2.9,<3",
  "pytest-asyncio>=0.24,<1",
  "pytest-cov>=5,<6",
  "pytest-mock>=3,<4",
  "pytest-xdist>=3,<4",
  "pytest>=8,<9",
  "ruff>=0.7,<0.8",
]

[tool.setuptools.dynamic]
version = { attr = "based.__version__" }

[tool.pytest.ini_options]
addopts = "-n 2 --cov=based --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff.lint]
select = [
  "A", "ANN", "ASYNC", "B", "BLE", "C90", "COM", "E", "ERA", "F", "FBT", "I",
  "INP", "N", "PIE", "PT", "PYI", "Q", "R", "RET", "RSE", "RUF", "S", "SIM",
  "SLF", "T20", "TID", "UP", "W",
]
ignore = [
  "ANN101", "SIM117", "BLE001",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
  "ANN001", "ANN201", "ANN202", "B017", "FBT001", "INP001", "PLR2004", "PT011",
  "PT012", "S101", "SLF001",
]
